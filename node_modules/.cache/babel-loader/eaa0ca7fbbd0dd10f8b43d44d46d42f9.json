{"ast":null,"code":"var _jsxFileName = \"/Users/Broleg/Desktop/Homework/Employee_Directory/src/components/ResultList/ResultList.js\";\nimport React from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport \"./ResultList.css\";\n\nconst ResultList = props => {\n  const formatDate = d => {\n    var date = new Date(d);\n    return (date.getMonth() > 8 ? date.getMonth() + 1 : '0' + (date.getMonth() + 1)) + '/' + (date.getDate() > 9 ? date.getDate() : '0' + date.getDate()) + '/' + date.getFullYear();\n  };\n\n  const data = {\n    columns: [{\n      label: 'Image',\n      field: 'Image'\n    }, {\n      label: 'Name',\n      field: 'Name',\n      sort: 'asc',\n      width: 270\n    }, {\n      label: 'Phone',\n      field: 'Phone',\n      sort: 'asc',\n      width: 200\n    }, {\n      label: 'Email',\n      field: 'Email',\n      sort: 'asc',\n      width: 100\n    }, {\n      label: 'dob',\n      field: 'dob',\n      sort: 'asc',\n      width: 150\n    }],\n    rows: props.results.map(item => ({\n      Image: /*#__PURE__*/React.createElement(\"img\", {\n        src: `${item.picture.thumbnail}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 20\n        }\n      }),\n      Name: `${item.name.first} ${item.name.last}`,\n      Phone: item.cell,\n      Email: item.email,\n      dob: formatDate(item.dob.date)\n    }))\n  };\n  return /*#__PURE__*/React.createElement(MDBDataTable, {\n    responsive: true,\n    striped: true,\n    bordered: true,\n    small: true,\n    searching: false,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default ResultList; // import React from 'react';\n// import './ResultList.css'\n// import Image from 'react-bootstrap/Image'\n// import Table from 'react-bootstrap/Table'\n// const ResultList = (props) => {\n// const formatDate = (d) => {\n//   var date = new Date(d);\n//   return(((date.getMonth() > 8) ? (date.getMonth() + 1) : ('0' + (date.getMonth() + 1))) + '/' + ((date.getDate() > 9) ? date.getDate() : ('0' + date.getDate())) + '/' + date.getFullYear());\n// }\n//   if (props.results.length > 0) {\n//     // console.log(props.results[0].id.value)\n//     // console.log(props.results[0].picture.thumbnail)\n//     // console.log(props.results[0].name.first)\n//     // console.log(props.results[0].cell)\n//     // console.log(props.results[0].email)\n//     // console.log(props.results[0])\n//   }\n//   return (\n//     <>\n//     <Table striped bordered hover>\n//       <thead>\n//         <tr class=\"black white-text\">\n//           <th>Image</th>\n//           <th>Name</th>\n//           <th>Phone</th>\n//           <th>Email</th>\n//           <th>DOB</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//           {props.results.map(item =>\n//           (<tr key={item.phone}> \n//             <td><Image className=\"img\" src={item.picture.thumbnail} thumbnail /></td>\n//             <td>{item.name.first} {item.name.last}</td>\n//             <td>{item.cell}</td>\n//             <td>{item.email}</td>\n//             <td>{formatDate(item.dob.date)}</td>\n//           </tr>))} \n//       </tbody>\n//     </Table>\n// </>\n//   )\n// }\n// export default ResultList;","map":{"version":3,"sources":["/Users/Broleg/Desktop/Homework/Employee_Directory/src/components/ResultList/ResultList.js"],"names":["React","MDBDataTable","ResultList","props","formatDate","d","date","Date","getMonth","getDate","getFullYear","data","columns","label","field","sort","width","rows","results","map","item","Image","picture","thumbnail","Name","name","first","last","Phone","cell","Email","email","dob"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE9B,QAAMC,UAAU,GAAIC,CAAD,IAAO;AAExB,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,CAAT,CAAX;AACA,WAAO,CAAEC,IAAI,CAACE,QAAL,KAAkB,CAAnB,GAAyBF,IAAI,CAACE,QAAL,KAAkB,CAA3C,GAAiD,OAAOF,IAAI,CAACE,QAAL,KAAkB,CAAzB,CAAlD,IAAkF,GAAlF,IAA0FF,IAAI,CAACG,OAAL,KAAiB,CAAlB,GAAuBH,IAAI,CAACG,OAAL,EAAvB,GAAyC,MAAMH,IAAI,CAACG,OAAL,EAAxI,IAA2J,GAA3J,GAAiKH,IAAI,CAACI,WAAL,EAAxK;AAED,GALD;;AAOE,QAAMC,IAAI,GAAG;AACXC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,KAAK,EAAE,OADT;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADO,EAMP;AACED,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,KAAK,EAAE,MAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,KAAK,EAAE;AAJT,KANO,EAYP;AACEH,MAAAA,KAAK,EAAE,OADT;AAEEC,MAAAA,KAAK,EAAE,OAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAZO,EAkBP;AACEH,MAAAA,KAAK,EAAE,OADT;AAEEC,MAAAA,KAAK,EAAE,OAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAlBO,EAwBP;AACEH,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,KAAK,EAAE,KAFT;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,KAAK,EAAE;AAJT,KAxBO,CADE;AAgCXC,IAAAA,IAAI,EAAEd,KAAK,CAACe,OAAN,CAAcC,GAAd,CAAkBC,IAAI,KAC1B;AACMC,MAAAA,KAAK,eAAE;AAAK,QAAA,GAAG,EAAG,GAAED,IAAI,CAACE,OAAL,CAAaC,SAAU,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADb;AAEMC,MAAAA,IAAI,EAAG,GAAEJ,IAAI,CAACK,IAAL,CAAUC,KAAM,IAAGN,IAAI,CAACK,IAAL,CAAUE,IAAK,EAFjD;AAGMC,MAAAA,KAAK,EAAER,IAAI,CAACS,IAHlB;AAIMC,MAAAA,KAAK,EAAEV,IAAI,CAACW,KAJlB;AAKMC,MAAAA,GAAG,EAAE5B,UAAU,CAACgB,IAAI,CAACY,GAAL,CAAS1B,IAAV;AALrB,KAD0B,CAAtB;AAhCK,GAAb;AA2CA,sBACE,oBAAC,YAAD;AACA,IAAA,UAAU,MADV;AAEE,IAAA,OAAO,MAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,KAAK,MAJP;AAKE,IAAA,SAAS,EAAE,KALb;AAME,IAAA,IAAI,EAAEK,IANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD,CA9DD;;AAgEA,eAAeT,UAAf,C,CAGA;AACA;AACA;AACA;AAIA;AAGA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAEA;AAEA","sourcesContent":["import React from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport \"./ResultList.css\"\n\nconst ResultList = (props) => {\n  \nconst formatDate = (d) => {\n\n  var date = new Date(d);\n  return(((date.getMonth() > 8) ? (date.getMonth() + 1) : ('0' + (date.getMonth() + 1))) + '/' + ((date.getDate() > 9) ? date.getDate() : ('0' + date.getDate())) + '/' + date.getFullYear());\n\n}\n\n  const data = {\n    columns: [\n      {\n        label: 'Image',\n        field: 'Image'\n      \n      },\n      {\n        label: 'Name',\n        field: 'Name',\n        sort: 'asc',\n        width: 270\n      },\n      {\n        label: 'Phone',\n        field: 'Phone',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Email',\n        field: 'Email',\n        sort: 'asc',\n        width: 100\n      },\n      {\n        label: 'dob',\n        field: 'dob',\n        sort: 'asc',\n        width: 150\n      }\n    ],\n    rows: props.results.map(item => (\n      {\n            Image: <img src={`${item.picture.thumbnail}`}></img>,\n            Name: `${item.name.first} ${item.name.last}`,\n            Phone: item.cell,\n            Email: item.email,\n            dob: formatDate(item.dob.date)\n      }\n    ))\n  };\n\n  return (\n    <MDBDataTable \n    responsive\n      striped\n      bordered\n      small\n      searching={false}\n      data={data}\n    />\n  );\n}\n\nexport default ResultList;\n\n\n// import React from 'react';\n// import './ResultList.css'\n// import Image from 'react-bootstrap/Image'\n// import Table from 'react-bootstrap/Table'\n\n\n\n// const ResultList = (props) => {\n\n\n// const formatDate = (d) => {\n\n//   var date = new Date(d);\n//   return(((date.getMonth() > 8) ? (date.getMonth() + 1) : ('0' + (date.getMonth() + 1))) + '/' + ((date.getDate() > 9) ? date.getDate() : ('0' + date.getDate())) + '/' + date.getFullYear());\n\n// }\n  \n//   if (props.results.length > 0) {\n//     // console.log(props.results[0].id.value)\n//     // console.log(props.results[0].picture.thumbnail)\n//     // console.log(props.results[0].name.first)\n//     // console.log(props.results[0].cell)\n//     // console.log(props.results[0].email)\n//     // console.log(props.results[0])\n//   }\n  \n//   return (\n//     <>\n//     <Table striped bordered hover>\n//       <thead>\n//         <tr class=\"black white-text\">\n//           <th>Image</th>\n//           <th>Name</th>\n//           <th>Phone</th>\n//           <th>Email</th>\n//           <th>DOB</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n\n//           {props.results.map(item =>\n//           (<tr key={item.phone}> \n//             <td><Image className=\"img\" src={item.picture.thumbnail} thumbnail /></td>\n//             <td>{item.name.first} {item.name.last}</td>\n//             <td>{item.cell}</td>\n//             <td>{item.email}</td>\n//             <td>{formatDate(item.dob.date)}</td>\n//           </tr>))} \n\n//       </tbody>\n//     </Table>\n\n\n\n\n// </>\n//   )\n\n// }\n\n// export default ResultList;"]},"metadata":{},"sourceType":"module"}