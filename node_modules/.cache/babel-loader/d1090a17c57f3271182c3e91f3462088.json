{"ast":null,"code":"var _jsxFileName = \"/Users/Broleg/Desktop/Homework/Employee_Directory/src/components/SearchContainer/SearchContainer.js\";\nimport React, { Component } from 'react';\nimport Search from '../Search/Search';\nimport ResultList from '../ResultList/ResultList';\nimport axios from 'axios';\n\nclass SearchContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchUser = async () => {\n      try {\n        const result = await axios.get(this.URL); // update the state of results\n\n        this.setState({\n          results: result.data.results\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleInputChange = event => {\n      const {\n        name,\n        value\n      } = event.target; // console.log(event.target.name)\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.compareStrings = (a, b) => {\n      // Assuming you want case-insensitive comparison\n      a = a.toLowerCase();\n      b = b.toLowerCase();\n      return a < b ? -1 : a > b ? 1 : 0;\n    };\n\n    this.handleClick = event => {\n      console.log(this.state.results);\n      this.state.results.sort((dataA, dataB) => {\n        return this.compareStrings(dataA.name.first, dataB.name.first);\n      });\n    };\n\n    this.state = {\n      search: \"\",\n      results: []\n    };\n    this.URL = \"https://randomuser.me/api/?results=50\";\n  }\n\n  componentDidMount() {\n    this.searchUser();\n  }\n\n  // handleClick = event => {\n  //     this.state.results.sort()\n  //     }\n  render() {\n    const filteredSearch = this.state.results.filter(data => {\n      if (this.state.search === \"\") return data;else if (data.name.first.toLowerCase().includes(this.state.search.toLowerCase())) return data;else if (data.name.last.toLowerCase().includes(this.state.search.toLowerCase())) return data;\n    }); // console.log(filteredSearch)\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"SortME!\"), /*#__PURE__*/React.createElement(Search, {\n      search: this.state.search,\n      handleInputChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ResultList, {\n      results: filteredSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default SearchContainer;","map":{"version":3,"sources":["/Users/Broleg/Desktop/Homework/Employee_Directory/src/components/SearchContainer/SearchContainer.js"],"names":["React","Component","Search","ResultList","axios","SearchContainer","constructor","props","searchUser","result","get","URL","setState","results","data","error","console","log","handleInputChange","event","name","value","target","compareStrings","a","b","toLowerCase","handleClick","state","sort","dataA","dataB","first","search","componentDidMount","render","filteredSearch","filter","includes","last"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Search from '../Search/Search'\nimport ResultList from '../ResultList/ResultList'\nimport axios from 'axios'\n\nclass SearchContainer extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            search: \"\",\n            results: []\n        }\n        this.URL = \"https://randomuser.me/api/?results=50\";\n\n    }\n\n    searchUser = async () => {\n\n        try {\n            const result = await axios.get(this.URL)\n            // update the state of results\n            \n            this.setState({ results: result.data.results })\n\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    handleInputChange = event => {\n\n        const { name, value } = event.target\n        // console.log(event.target.name)\n        this.setState({\n            [name]: value\n        })\n    }\n\n    componentDidMount() {\n\n        this.searchUser();\n    }\n\n    compareStrings = (a, b) => {\n        // Assuming you want case-insensitive comparison\n        a = a.toLowerCase();\n        b = b.toLowerCase();\n\n        return (a < b) ? -1 : (a > b) ? 1 : 0;\n    }\n\n    handleClick = event => {\n        console.log(this.state.results)\n        this.state.results.sort((dataA, dataB) => {\n            return this.compareStrings(dataA.name.first, dataB.name.first);\n        })\n    }\n    \n    // handleClick = event => {\n    //     this.state.results.sort()\n    //     }\n    \n\n\n\n\n    render() {\n\n        const filteredSearch = this.state.results.filter((data) => {\n\n            if (this.state.search === \"\")\n                return data\n            else if (data.name.first.toLowerCase().includes(this.state.search.toLowerCase()))\n                return data\n            else if (data.name.last.toLowerCase().includes(this.state.search.toLowerCase()))\n                return data\n\n\n        })\n        // console.log(filteredSearch)\n        return (\n            <>\n                <button \n                onClick={() => this.handleClick()}>SortME!\n                </button>\n                <Search\n                    search={this.state.search}\n                    handleInputChange={this.handleInputChange}\n                />\n                <ResultList results={filteredSearch} />\n\n            </>\n\n        )\n\n    }\n}\n\nexport default SearchContainer;"]},"metadata":{},"sourceType":"module"}